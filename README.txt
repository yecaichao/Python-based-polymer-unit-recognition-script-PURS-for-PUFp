1.Get polymer-unit.py, polymer-unit-classify. py, structure-identity-tool.py and the input file (test.csv) are placed in the same folder.
2.Run get-polymer-unit. py to get the output file as follows (python get-polymer-unit.py):
 1）ring_total_list.csv ：Polymer-units identified from test.csv.
 2）one_hot.csv：One-hot fingerprint for the input file generated by ring_total_list.
 3）number.csv：PUFp for input files generated by ring_total_list (see paper for details).
 4）adjacent_matrix.csv：Adjacency matrix.
 5）node_matrix.csv：Node matrix.
 6）index_data.csv：Polymer-units number for each data.
3.The output file obtained by running polymer-unit-classify. py is as follows（python polymer-unit-classify.py）:
 1）ring_df.csv ：Record the classification label of each polymer-units.
 2）type_frame.csv：Record the polymer-units type contained in each data.

When using PURS in your research PLEASE cite the paper:
[1] Xinyue Zhang, Ye Sheng, Xiumin Liu, Jiong Yang, William A. Goddard III, Caichao Ye*, Wenqing Zhang*. Polymer-unit Graph: Advancing Interpretability in Graph Neural Network Machine Learning for Organic Polymer Semiconductor Materials. J. Chem. Theory Comput., 2024, 20(7), 2908-2920.
[2] Xinyue Zhang, Genwang Wei, Ye Sheng, Wenjun Bai, Jiong Yang, Wenqing Zhang*, Caichao Ye*. Polymer-Unit Fingerprint (PUFp): An Accessible Expression of Polymer Organic Semiconductors for Machine Learning. ACS Appl. Mater. Interfaces, 2023, 15(17), 21537–21548.
